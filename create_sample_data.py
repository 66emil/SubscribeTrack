#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ú–µ–Ω–µ–¥–∂–µ—Ä –ü–æ–¥–ø–∏—Å–æ–∫
–ó–∞–ø—É—Å–∫: python create_sample_data.py
"""

import os
import django
from datetime import date, timedelta
from decimal import Decimal

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'subscribe_track.settings')
django.setup()

from django.contrib.auth.models import User
from core.models import Category, Company, Subscription


def create_sample_data():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    user, created = User.objects.get_or_create(
        username='demo',
        defaults={
            'email': 'demo@example.com',
            'is_active': True
        }
    )
    if created:
        user.set_password('demo123')
        user.save()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} (–ø–∞—Ä–æ–ª—å: demo123)")
    else:
        print(f"‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    categories_data = [
        {
            'name': '–°—Ç—Ä–∏–º–∏–Ω–≥ –≤–∏–¥–µ–æ',
            'description': '–û–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤'
        },
        {
            'name': '–û–±–ª–∞—á–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
            'description': '–°–µ—Ä–≤–∏—Å—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –æ–±–ª–∞–∫–µ'
        },
        {
            'name': '–ú—É–∑—ã–∫–∞',
            'description': '–°–µ—Ä–≤–∏—Å—ã –ø–æ—Ç–æ–∫–æ–≤–æ–π –º—É–∑—ã–∫–∏'
        },
        {
            'name': '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
            'description': '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'
        },
        {
            'name': '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
            'description': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
        }
    ]
    
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    categories = {}
    for cat_data in categories_data:
        category, created = Category.objects.get_or_create(
            name=cat_data['name'],
            defaults={'description': cat_data['description']}
        )
        categories[cat_data['name']] = category
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category.name}")
        else:
            print(f"  ‚ÑπÔ∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π
    companies_data = [
        {
            'name': 'Netflix',
            'category': '–°—Ç—Ä–∏–º–∏–Ω–≥ –≤–∏–¥–µ–æ',
            'description': '–ö—Ä—É–ø–Ω–µ–π—à–∏–π —Å–µ—Ä–≤–∏—Å –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ —Å –æ–≥—Ä–æ–º–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π —Ñ–∏–ª—å–º–æ–≤ –∏ —Å–µ—Ä–∏–∞–ª–æ–≤',
            'website': 'https://www.netflix.com',
            'subscription_plans': {
                '–ë–∞–∑–æ–≤–∞—è': '990',
                '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è': '1490',
                '–ü—Ä–µ–º–∏—É–º': '2490'
            }
        },
        {
            'name': '–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å',
            'category': '–°—Ç—Ä–∏–º–∏–Ω–≥ –≤–∏–¥–µ–æ',
            'description': '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å —Å —Ñ–∏–ª—å–º–∞–º–∏, –º—É–∑—ã–∫–æ–π –∏ –¥–æ—Å—Ç–∞–≤–∫–æ–π',
            'website': 'https://plus.yandex.ru',
            'subscription_plans': {
                '–ú—É–ª—å—Ç–∏': '399',
                '–°–µ–º–µ–π–Ω–∞—è': '599'
            }
        },
        {
            'name': 'Google One',
            'category': '–û–±–ª–∞—á–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
            'description': '–û–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç Google',
            'website': 'https://one.google.com',
            'subscription_plans': {
                '100 GB': '139',
                '200 GB': '219',
                '2 TB': '799'
            }
        },
        {
            'name': '–Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫',
            'category': '–û–±–ª–∞—á–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞',
            'description': '–†–æ—Å—Å–∏–π—Å–∫–æ–µ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ',
            'website': 'https://disk.yandex.ru',
            'subscription_plans': {
                '100 GB': '129',
                '1 TB': '899',
                '3 TB': '2490'
            }
        },
        {
            'name': 'Spotify',
            'category': '–ú—É–∑—ã–∫–∞',
            'description': '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å—Ç—Ä–∏–º–∏–Ω–≥–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å',
            'website': 'https://www.spotify.com',
            'subscription_plans': {
                '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è': '269',
                'Duo': '349',
                '–°–µ–º–µ–π–Ω–∞—è': '429'
            }
        },
        {
            'name': '–Ø–Ω–¥–µ–∫—Å –ú—É–∑—ã–∫–∞',
            'category': '–ú—É–∑—ã–∫–∞',
            'description': '–†–æ—Å—Å–∏–π—Å–∫–∏–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å',
            'website': 'https://music.yandex.ru',
            'subscription_plans': {
                '–ü–æ–¥–ø–∏—Å–∫–∞': '299',
                '–°–µ–º–µ–π–Ω–∞—è': '399'
            }
        },
        {
            'name': 'Coursera',
            'category': '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
            'description': '–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã –æ—Ç –≤–µ–¥—É—â–∏—Ö —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤',
            'website': 'https://www.coursera.org',
            'subscription_plans': {
                'Coursera Plus': '4999'
            }
        },
        {
            'name': 'Skillbox',
            'category': '–û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ',
            'description': '–†–æ—Å—Å–∏–π—Å–∫–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –æ–Ω–ª–∞–π–Ω-–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
            'website': 'https://skillbox.ru',
            'subscription_plans': {
                '–ü—Ä–µ–º–∏—É–º': '1990',
                '–ë–µ–∑–ª–∏–º–∏—Ç': '3990'
            }
        },
        {
            'name': 'Notion',
            'category': '–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
            'description': '–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏ –∏ –∑–∞–º–µ—Ç–∫–∞–º–∏',
            'website': 'https://www.notion.so',
            'subscription_plans': {
                'Plus': '800',
                'Business': '1500'
            }
        }
    ]
    
    print("\nüè¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–π...")
    companies = {}
    for comp_data in companies_data:
        category = categories[comp_data['category']]
        company, created = Company.objects.get_or_create(
            name=comp_data['name'],
            defaults={
                'category': category,
                'description': comp_data['description'],
                'website': comp_data['website'],
                'subscription_plans': comp_data['subscription_plans']
            }
        )
        companies[comp_data['name']] = company
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è: {company.name}")
        else:
            print(f"  ‚ÑπÔ∏è  –ö–æ–º–ø–∞–Ω–∏—è {company.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –¥–ª—è demo –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    subscriptions_data = [
        {
            'company': 'Netflix',
            'plan_name': '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è',
            'price': '1490',
            'billing_period': 'monthly',
            'status': 'active',
            'start_date': date(2024, 1, 15),
            'next_billing_date': date(2025, 11, 15),
            'notes': '–°–µ–º–µ–π–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –¥–µ–ª–∏–º –Ω–∞ 3 —á–µ–ª–æ–≤–µ–∫–∞'
        },
        {
            'company': 'Spotify',
            'plan_name': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è',
            'price': '269',
            'billing_period': 'monthly',
            'status': 'active',
            'start_date': date(2024, 3, 1),
            'next_billing_date': date(2025, 11, 1),
            'notes': '–ú—É–∑—ã–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫'
        },
        {
            'company': 'Google One',
            'plan_name': '200 GB',
            'price': '219',
            'billing_period': 'monthly',
            'status': 'active',
            'start_date': date(2024, 2, 10),
            'next_billing_date': date(2025, 11, 10),
            'notes': '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ'
        },
        {
            'company': 'Notion',
            'plan_name': 'Plus',
            'price': '800',
            'billing_period': 'monthly',
            'status': 'active',
            'start_date': date(2024, 6, 1),
            'next_billing_date': date(2025, 11, 1),
            'notes': '–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏'
        },
        {
            'company': '–Ø–Ω–¥–µ–∫—Å –ü–ª—é—Å',
            'plan_name': '–ú—É–ª—å—Ç–∏',
            'price': '399',
            'billing_period': 'monthly',
            'status': 'paused',
            'start_date': date(2024, 4, 15),
            'next_billing_date': date(2025, 12, 15),
            'notes': '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ø—É—Å–∫–∞'
        }
    ]
    
    print("\nüí≥ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫...")
    for sub_data in subscriptions_data:
        company = companies[sub_data['company']]
        subscription, created = Subscription.objects.get_or_create(
            user=user,
            company=company,
            plan_name=sub_data['plan_name'],
            defaults={
                'price': Decimal(sub_data['price']),
                'billing_period': sub_data['billing_period'],
                'status': sub_data['status'],
                'start_date': sub_data['start_date'],
                'next_billing_date': sub_data['next_billing_date'],
                'notes': sub_data['notes']
            }
        )
        if created:
            print(f"  ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞: {company.name} - {sub_data['plan_name']}")
        else:
            print(f"  ‚ÑπÔ∏è  –ü–æ–¥–ø–∏—Å–∫–∞ {company.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    
    print("\n" + "="*60)
    print("‚ú® –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print("="*60)
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"  ‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏–π: {Category.objects.count()}")
    print(f"  ‚Ä¢ –ö–æ–º–ø–∞–Ω–∏–π: {Company.objects.count()}")
    print(f"  ‚Ä¢ –ü–æ–¥–ø–∏—Å–æ–∫: {Subscription.objects.count()}")
    print(f"  ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {User.objects.count()}")
    
    print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print(f"  –õ–æ–≥–∏–Ω: demo")
    print(f"  –ü–∞—Ä–æ–ª—å: demo123")
    
    print("\nüåê –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:")
    print(f"  python manage.py runserver")
    print(f"\n  –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://127.0.0.1:8000/")
    print(f"  –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/")


if __name__ == '__main__':
    try:
        create_sample_data()
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

